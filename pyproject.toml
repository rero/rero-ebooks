[tool.poetry]
name = "rero-ebooks"
version = "0.6.1"
description = "Ebooks repository for RERO."
authors = ["RERO <software@rero.ch>"]
license = "GNU Affero General Public License v3.0"

[tool.poetry.dependencies]
python = ">= 3.9, <3.10"
## Python packages dependencies (order matters)
#------------------------------------------------------------------------------
## Note: poetry evaluates the package constraints from the top to the bottom
## and respects only the last constraint to install the package.
## Thus the most strength constraint should be at the end.
## Imagine the following package list for the foo package with the
## most recent version equal to 5.0:
## A foo Pipfile example:
## ----------------------
## foo = ">1.0" # first will install 5.0
## foo = "==1.0" # then will downgrade to 1.0
## foo = ">3.0" # finally will upgrade to 5.0
## when the python code will be executed a conflict exception will be raised.
#------------------------------------------------------------------------------
# Default from Invenio
lxml = ">=4.9.1"
uwsgi = ">=2.0"
uwsgi-tools = ">=1.1.1"
uwsgitop = ">=0.11"

## Third party invenio modules used by RERO EBOOKS
# TODO: needed for `parameter from` fix.
invenio-oaiharvester = { git = "https://github.com/inveniosoftware/invenio-oaiharvester.git", tag = "v1.0.0a4" }
invenio-search = {version = ">=2.1.0,<3.0.0", extras = ["elasticsearch7"]}

# Invenio core modules
invenio-app = ">=1.3.4,<1.4.0"
invenio-base = ">=1.2.11,<1.3.0"
invenio-cache = ">=1.1.1,<1.2.0"
invenio-celery = ">=1.2.4,<1.3.0"
invenio-config = ">=1.0.3,<1.1.0"
invenio-i18n = ">=2.0.0,<3.0.0"
invenio-db = {version = ">=1.0.14,<1.1.0", extras = ["postgresql"]}
# Invenio base bundle
invenio-admin = ">=1.4.0,<1.5.0"
# invenio-assets = ">=3.0.0,<4.0.0" # error patch-package 6.5.1 semantic-ui-less
invenio-assets = ">=1.0.0,<3.0.0"
invenio-formatter = ">=2.0.0,<3.0.0"
invenio-logging = {version = ">=2.0.0,<3.0.0"}
invenio-mail = ">=2.0.0,<3.0.0"
invenio-rest = ">=1.3.0,<1.4.0"
invenio-theme = ">=2.0.0,<3.0.0"
# Invenio auth bundle
invenio-access = ">=2.0.0,<3.0.0"
invenio-accounts = ">=3.0.0,<4.0.0"
invenio-oauth2server = ">=2.0.0,<3.0.0"
invenio-oauthclient = ">=3.0.0,<4.0.0"
invenio-userprofiles = ">=2.2.0,<3.0.0"
# Invenio metadata bundle
invenio-indexer = ">=2.2.0,<3.0.0"
invenio-jsonschemas = ">=1.1.4,<1.2.0"
invenio-oaiserver = ">=2.2.0,<2.3.0"
invenio-pidstore = ">=1.3.0,<1.4.0"
invenio-records-rest = ">=2.2.0,<2.3.0"
invenio-records-ui = ">=1.2.0,<1.3.0"
invenio-records = "2.1.0,<2.2.0"
#invenio-search-ui = ">=2.4.0,<3.0.0"
# Pinned due to before_first_request deprecation https://flask.palletsprojects.com/en/2.2.x/api/#flask.Flask.before_first_request
Flask = ">=2.2.0,<2.3.0"
dojson = ">=1.4.0"
# TODO: dojson problem = AttributeError: 'Group' object has no attribute 'resultcallback'
# click = "<8.1.0"
sentry-sdk = ">=1.0.0" # normaly in invenio-logging = {version = ">=2.0.0,<3.0.0", extras = ["sentry_sdk"]}

## RERO ILS specific python modules
PyYAML = ">=5.3.1"
isbnlib = ">=3.9.1"
requests = ">=2.20.0"
responses = "*"

## Deployment
python-dotenv = ">=0.13.0"
pydocstyle = ">=6.1.1"

## RERO ILS specific python modules
poethepoet = "*"
# rero-invenio-base = ">=0.2.0"
# werkzeug = "<2.3.0"

[tool.poetry.dev-dependencies]
## Python packages development dependencies (order matters)
#----------------------------------------------------------
## Default from Invenio
pytest-invenio = ">=2.1.0,<3.0.0"
Sphinx = ">=4.5.0"
## RERO ILS specific python packages
safety = ">=1.8"
mock = ">=2.0.0"
autoflake = ">=1.3.1"
appnope = { version = "*", optional = true }

[tool.poetry.plugins."console_scripts"]
rero-ebooks = "invenio_app.cli:cli"

[tool.poetry.plugins."invenio_assets.webpack"]
rero_ebooks_theme = "rero_ebooks.theme.webpack:theme"

[tool.poetry.plugins."invenio_base.apps"]
rero_ebooks = "rero_ebooks:ReroEBooks"

[tool.poetry.plugins."invenio_base.blueprints"]
rero_ebooks = "rero_ebooks.theme.views:blueprint"

[tool.poetry.plugins."invenio_base.api_blueprints"]
api_rero_ebooks = "rero_ebooks.theme.views:api_blueprint"

[tool.poetry.plugins."invenio_config.module"]
rero_ebooks = "rero_ebooks.config"

[tool.poetry.plugins."invenio_i18n.translations"]
messages = "rero_ebooks"

[tool.poetry.plugins."invenio_pidstore.minters"]
ebook = "rero_ebooks.minters:ebook_pid_minter"

[tool.poetry.plugins."invenio_pidstore.fetchers"]
ebook = "rero_ebooks.fetchers:ebook_pid_fetcher"

[tool.poetry.plugins."invenio_search.mappings"]
ebooks = "rero_ebooks.mappings"

[tool.poetry.plugins."dojson.cli.rule"]
tomarc21 = "dojson.contrib.to_marc21:to_marc21"
cantookmarc21 = "rero_ebooks.dojson.marc21:marc21"
cantookjson = "rero_ebooks.dojson.json.model:cantook_json"

[tool.poetry.plugins."dojson.cli.dump"]
pjson = "rero_ebooks.dojson.utils:dump"

[tool.poetry.plugins."flask.commands"]
oaiharvester = "rero_ebooks.cli:oaiharvester"
apiharvester = "rero_ebooks.apiharvester.cli:apiharvester"

[tool.poetry.plugins."rero_ebooks.marc21"]
bdleader = "rero_ebooks.dojson.marc21.fields.bdleader"
bd00x = "rero_ebooks.dojson.marc21.fields.bd00x"
bd01x09x = "rero_ebooks.dojson.marc21.fields.bd01x09x"
bd1xx = "rero_ebooks.dojson.marc21.fields.bd1xx"
bd20x24x = "rero_ebooks.dojson.marc21.fields.bd20x24x"
bd25x28x = "rero_ebooks.dojson.marc21.fields.bd25x28x"
bd3xx = "rero_ebooks.dojson.marc21.fields.bd3xx"
bd4xx = "rero_ebooks.dojson.marc21.fields.bd4xx"
bd5xx = "rero_ebooks.dojson.marc21.fields.bd5xx"
bd6xx = "rero_ebooks.dojson.marc21.fields.bd6xx"
bd70x75x = "rero_ebooks.dojson.marc21.fields.bd70x75x"
bd76x78x = "rero_ebooks.dojson.marc21.fields.bd76x78x"
bd80x83x = "rero_ebooks.dojson.marc21.fields.bd80x83x"
bd84188x = "rero_ebooks.dojson.marc21.fields.bd84188x"

[tool.poetry.plugins."invenio_db.models"]
apiharvester = "rero_ebooks.apiharvester.models"

[tool.poetry.plugins."invenio_celery.tasks"]
rero_ebooks = "rero_ebooks.tasks"
apiharvester = "rero_ebooks.apiharvester.tasks"

[tool.poe.tasks]
bootstrap = {cmd = "./scripts/bootstrap", help = "Runs bootstrap"}
console = {cmd = "./scripts/console", help = "Opens invenio shell"}
run_tests = {cmd = "./scripts/tests", help = "Runs all tests"}
tests = {cmd = "pytest", help = "pytest"}
tests_debug = {cmd = "./scripts/pytest -s --v --no-cov", help = "pytest -s --v --no-cov"}
server = {cmd = "./scripts/server", help = "Starts the server "}
setup = {cmd = "./scripts/setup", help = "Runs setup"}
update = {cmd = "./scripts/update", help = "Runs update"}

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
