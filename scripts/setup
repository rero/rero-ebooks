#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# This file is part of RERO Ebooks.
# Copyright (C) 2018 RERO.
#
# RERO Ebooks is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# RERO Ebooks is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with RERO Ebooks; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, RERO does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.


# COLORS for messages
NC='\033[0m'                    # Default color
INFO_COLOR='\033[1;97;44m'      # Bold + white + blue background
SUCCESS_COLOR='\033[1;97;42m'   # Bold + white + green background
ERROR_COLOR='\033[1;97;41m'     # Bold + white + red background

PROGRAM=`basename $0`

# MESSAGES
msg() {
  echo -e "${1}" 1>&2
}
# Display a colored message
# More info: https://misc.flogisoft.com/bash/tip_colors_and_formatting
# $1: choosen color
# $2: title
# $3: the message
colored_msg() {
  msg "${1}[${2}]: ${3}${NC}"
}

info_msg() {
  colored_msg "${INFO_COLOR}" "INFO" "${1}"
}

error_msg() {
  colored_msg "${ERROR_COLOR}" "ERROR" "${1}"
}

error_msg+exit() {
    error_msg "${1}" && exit 1
}

success_msg() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}"
}

invert_warning_option() {
  if ${ENABLE_WARNINGS}
  then
    ENABLE_WARNINGS=false
  else
    ENABLE_WARNINGS=true
  fi
}

# Displays program name
PROGRAM=`basename $0`
msg "PROGRAM: ${PROGRAM}"

# POETRY is a mandatory condition to launch this program!
if [[ -z "${VIRTUAL_ENV}" ]]; then
  error_msg+exit "Error - Launch this script via poetry command:\n\tpoetry run ${PROGRAM}"
fi

# Purge celery
info_msg "Purge celery"
celery purge -A rero_ebooks.celery -f
# Clean redis
info_msg "Clean redis"
invenio shell --no-term-title -c "import redis; redis.StrictRedis.from_url(app.config['CACHE_REDIS_URL']).flushall(); print('Cache cleared')"

invenio db destroy --yes-i-know
invenio db init create
invenio index queue purge delete
set -e
invenio index destroy --force --yes-i-know
invenio index init --force
invenio index queue init

# init apiharvester config from file
invenio apiharvester sources data/apisources.yml
if [ "$1" = "--deployment" ]
then
  # load source VS
  invenio apiharvester harvest -n VS -k
  # load source NJ
  invenio apiharvester harvest -n NJ -k
else
  # load source VS
  invenio apiharvester harvest -n VS -v -m 100
  # load source NJ
  invenio apiharvester harvest -n NJ -v -m 100
fi

invenio apiharvester initsets data/oaisets.yml -v
